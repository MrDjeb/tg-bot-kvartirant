name: CI

on:
  push:
    branches:
      - main

env:
  REGISTRY: "crpp6o1a47k42ls7uslj"
  IMAGE_NAME: "tg-bot-kvartirant"
  CONTAINER_NAME: "kvartirant"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Build container image
        run: docker build -t cr.yandex/$(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Push image to Yandex Cloud Container Registry
        run: docker push cr.yandex/$(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Yandex Cloud via SSH action
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }} 
          envs: REGISTRY, IMAGE_NAME, CONTAINER_NAME, GITHUB_SHA
          script: |
            # Login into Digital Ocean Registry
            docker login --username oauth --password ${{ secrets.YANDEXCLOUD_OAUTH_TOKEN }} cr.yandex
            # Stop running container
            docker stop $(echo $CONTAINER_NAME)
            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Set env variables
            export TG_TOKEN=${{ secrets.TG_TOKEN }}
            export ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}
            export GODMODE_SECRET=${{ secrets.GODMODE_SECRET }}

            # Run a new container from a new image
            docker run -e TG_TOKEN -e ACCESS_SECRET -e GODMODE_SECRET -d \
            --restart always \
            --publish 80:80 \
            --name $(echo $CONTAINER_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)